/**
 * Party Management Micro Service V1
 * This service is the party manager
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package it.pagopa.interop.selfcare.partymanagement.client.api

    import it.pagopa.interop.selfcare.partymanagement.client.model.Institution
    import it.pagopa.interop.selfcare.partymanagement.client.model.Problem
import it.pagopa.interop.selfcare.partymanagement.client.invoker._
import it.pagopa.interop.selfcare.partymanagement.client.invoker.CollectionFormats._
import it.pagopa.interop.selfcare.partymanagement.client.invoker.ApiKeyLocations._

    object ExternalApi {
    def apply(baseUrl: String = "https://party-management") = new ExternalApi(baseUrl)
    }


    class ExternalApi(baseUrl: String) {
  /**
   *             returns the identified institution, if any.
   * 
   * Expected answers:
   *   code 200 : Institution (Institution)
   *   code 400 : Problem (Bad Request)
   *   code 404 : Problem (Institution not found)
   * 
   * Available security schemes:
   *   apiKeySelfcare (apiKey)
   * 
   * @param xSelfcareUid 
   * @param externalId External Institution ID
   */
        def getInstitutionByExternalId(
                                                                    externalId:
                String
                                            )
        (xSelfcareUid:String)(implicit apiKeySelfcare:ApiKeyValue): ApiRequest[Institution] =
        ApiRequest[Institution](ApiMethods.GET, baseUrl, "/external/institutions/{externalId}", "application/json")
        .withApiKey(apiKeySelfcare, "Ocp-Apim-Subscription-Key", HEADER)
        
        
        
        
        .withPathParam("externalId", externalId)
        .withHeaderParam("x-selfcare-uid", xSelfcareUid)
        .withSuccessResponse[Institution](200)
        .withErrorResponse[Problem](400)
        .withErrorResponse[Problem](404)
        



    }

