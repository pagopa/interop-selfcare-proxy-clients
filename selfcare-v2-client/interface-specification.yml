openapi: 3.0.1
info:
  title: External API service
  description: This service is the proxy for external services
  version: v2
servers:
  - url: https://api.dev.selfcare.pagopa.it/external/v2
paths:
  /institutions:
    get:
      tags:
        - institutions
      summary: getInstitutions
      description: The service retrieves all the onboarded institutions related to the provided user and the product retrieved from Subscription Key
      operationId: getInstitutionsUsingGET
      parameters:
        - name: userIdForAuth
          in: query
          description: User's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionResource'
              example:
                - address: string
                  description: string
                  digitalAddress: string
                  externalId: string
                  id: string
                  institutionType: GSP
                  origin: string
                  originId: string
                  status: string
                  taxCode: string
                  userProductRoles:
                    - string
                  zipCode: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  '/institutions/{institutionId}/users':
    get:
      tags:
        - institutions
      summary: getInstitutionProductUsers
      description: Service to get all the active users related to the provided institution and the product retrieved from Subscription Key
      operationId: getInstitutionProductUsersUsingGET
      parameters:
        - name: institutionId
          in: path
          description: Institution's unique internal identifier
          required: true
          schema:
            type: string
        - name: userIdForAuth
          in: query
          description: User's unique identifier
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User's unique identifier
          schema:
            type: string
        - name: productRoles
          in: query
          description: User's roles in product
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResource'
              example:
                - email: email@example.com
                  id: string
                  name: string
                  roles:
                    - string
                  surname: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  '/institutions/{institutionId}/products':
    get:
      tags:
        - institutions
      summary: getInstitutionUserProducts
      description: Service to retrieve all active products for given institution and user
      operationId: getInstitutionUserProductsUsingGET
      parameters:
        - name: institutionId
          in: path
          description: Institution's unique internal Id
          required: true
          schema:
            type: string
        - name: userId
          in: query
          description: User's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResource'
              example:
                - contractTemplatePath: string
                  contractTemplateUpdatedAt: string
                  contractTemplateVersion: string
                  createdAt: string
                  depictImageUrl: string
                  description: string
                  id: string
                  identityTokenAudience: string
                  logo: string
                  logoBgColor: string
                  parentId: string
                  roleManagementURL: string
                  roleMappings: { }
                  title: string
                  urlBO: string
                  urlPublic: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  '/institutions/{id}':
    get:
      tags:
        - institutions
      summary: Gets the corresponding institution using internal institution id
      description: Gets institution using internal institution id
      operationId: getInstitution
      parameters:
        - name: id
          in: path
          description: Format - uuid. The internal identifier of the institution
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
              example:
                id: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
                externalId: c_f205
                originId: c_f205
                description: AGENCY X
                digitalAddress: email@pec.mail.org
                address: via del campo
                zipCode: '20100'
                taxCode: string
                origin: IPA
                institutionType: PA
                attributes:
                  - origin: string
                    code: string
                    description: string
                logo: string
        '400':
          description: Invalid id supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  /user-groups:
    get:
      tags:
        - user-group
      summary: getUserGroups
      description: Service that allows to get a list of UserGroup entities filtered by the product related to Subscription Key
      operationId: getUserGroupsUsingGET
      parameters:
        - name: institutionId
          in: query
          description: Users group's institutionId
          schema:
            type: string
        - name: page
          in: query
          description: 'Format - int32. The page number to access (0 indexed, defaults to 0)'
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          description: 'Format - int32. Number of records per page (defaults to 20, max 2000)'
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          schema:
            type: array
            items:
              type: string
        - name: userId
          in: query
          description: Format - uuid. Member's unique identifier
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: 'If filter on status is present, it must be used with at least one of the other filters'
          schema:
            enum:
              - ACTIVE
              - SUSPENDED
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfUserGroupResource'
              example:
                content:
                  - description: string
                    id: string
                    institutionId: string
                    name: string
                    productId: string
                    status: ACTIVE
                number: 0
                size: 0
                totalElements: 0
                totalPages: 0
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  /product:
    get:
      tags:
        - product
      summary: getProduct
      description: The service retrieves Product information related to Subscription Key
      operationId: getProductUsingGET
      parameters:
        - name: institutionType
          in: query
          description: Institution's type
          schema:
            enum:
              - GSP
              - PA
              - PSP
              - PT
              - SCP
              - SA
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResource'
              example:
                contractTemplatePath: string
                contractTemplateUpdatedAt: string
                contractTemplateVersion: string
                createdAt: string
                depictImageUrl: string
                description: string
                id: string
                identityTokenAudience: string
                logo: string
                logoBgColor: string
                parentId: string
                roleManagementURL: string
                roleMappings: { }
                title: string
                urlBO: string
                urlPublic: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  /institutions/byGeoTaxonomies:
    get:
      tags:
        - institutions
      summary: getInstitutionsByGeoTaxonomies
      description: The service retrieves all the institutions based on given a list of geotax ids and a searchMode
      operationId: getInstitutionsByGeoTaxonomiesUsingGET
      parameters:
        - name: geoTaxonomies
          in: query
          description: Geotaxonomy's internal Id
          required: true
          schema:
            type: string
        - name: userIdForAuth
          in: query
          description: User's unique identifier
          required: true
          schema:
            type: string
        - name: searchMode
          in: query
          description: Searching mode to find institutions based on geotax
          schema:
            enum:
              - all
              - any
              - exact
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionDetailResource'
              example:
                - address: string
                  businessRegisterPlace: string
                  description: string
                  digitalAddress: string
                  externalId: string
                  geographicTaxonomies:
                    - code: string
                      desc: string
                  id: string
                  imported: false
                  institutionType: GSP
                  origin: string
                  originId: string
                  rea: string
                  shareCapital: string
                  supportEmail: email@example.com
                  supportPhone: string
                  taxCode: string
                  zipCode: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
  '/institutions/{institutionId}/geographicTaxonomy':
    get:
      tags:
        - institutions
      summary: getInstitutionGeographicTaxonomies
      description: The service retrieve the institution's geographic taxonomy
      operationId: getInstitutionGeographicTaxonomiesUsingGET
      parameters:
        - name: institutionId
          in: path
          description: Institution's unique internal Id
          required: true
          schema:
            type: string
        - name: userIdForAuth
          in: query
          description: User's unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeographicTaxonomyResource'
              example:
                - code: string
                  desc: string
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              example:
                detail: string
                instance: string
                invalidParams:
                  - name: string
                    reason: string
                status: 500
                title: string
                type: string
components:
  schemas:
    GeographicTaxonomyResource:
      title: GeographicTaxonomyResource
      required:
        - code
        - desc
      type: object
      properties:
        code:
          type: string
          description: Institution's geographic taxonomy ISTAT code
        desc:
          type: string
          description: Institution's geographic taxonomy extended name
    InstitutionDetailResource:
      title: InstitutionDetailResource
      required:
        - address
        - description
        - digitalAddress
        - externalId
        - geographicTaxonomies
        - id
        - institutionType
        - origin
        - originId
        - taxCode
        - zipCode
      type: object
      properties:
        address:
          type: string
          description: Institution's physical address
        businessRegisterPlace:
          type: string
          description: Institution's business register place
        description:
          type: string
          description: Institution's legal name
        digitalAddress:
          type: string
          description: Institution's digitalAddress
        externalId:
          type: string
          description: Institution's unique external identifier
        geographicTaxonomies:
          type: array
          items:
            $ref: '#/components/schemas/GeographicTaxonomyResource'
          description: Institution's geographic taxonomy list
        id:
          type: string
          description: Institution's unique internal Id
          format: uuid
        imported:
          type: boolean
          description: True if institution is stored from batch api
          example: false
        institutionType:
          enum:
            - GSP
            - PA
            - PSP
            - PT
            - SCP
            - SA
          type: string
          description: Institution's type
        origin:
          type: string
          description: Institution data origin
        originId:
          type: string
          description: Institution's details origin Id
        rea:
          type: string
          description: Institution's REA
        shareCapital:
          type: string
          description: Institution's share capital value
        supportEmail:
          type: string
          description: Institution's support email contact
          format: email
          example: email@example.com
        supportPhone:
          type: string
          description: Institution's support phone contact
        taxCode:
          type: string
          description: Institution's taxCode
        zipCode:
          type: string
          description: Institution's zipCode
    InstitutionResource:
      title: InstitutionResource
      required:
        - address
        - description
        - digitalAddress
        - externalId
        - id
        - institutionType
        - origin
        - originId
        - status
        - taxCode
        - userProductRoles
        - zipCode
      type: object
      properties:
        address:
          type: string
          description: Institution's physical address
        description:
          type: string
          description: Institution's legal name
        digitalAddress:
          type: string
          description: Institution's digitalAddress
        externalId:
          type: string
          description: Institution's unique external identifier
        id:
          type: string
          description: Institution's unique internal Id
          format: uuid
        institutionType:
          enum:
            - GSP
            - PA
            - PT
            - SCP
            - SA
          type: string
          description: Institution's type
        origin:
          type: string
          description: Institution data origin
        originId:
          type: string
          description: Institution's details origin Id
        status:
          type: string
          description: Institution onboarding status
        taxCode:
          type: string
          description: Institution's taxCode
        userProductRoles:
          type: array
          items:
            type: string
          description: User's roles on product
        zipCode:
          type: string
          description: Institution's zipCode
    InvalidParam:
      title: InvalidParam
      required:
        - name
        - reason
      type: object
      properties:
        name:
          type: string
          description: Invalid parameter name.
        reason:
          type: string
          description: Invalid parameter reason.
    Problem:
      title: Problem
      required:
        - status
        - title
      type: object
      properties:
        detail:
          type: string
          description: Human-readable description of this specific problem.
        instance:
          type: string
          description: A URI that describes where the problem occurred.
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/InvalidParam'
          description: A list of invalid parameters details.
        status:
          type: integer
          description: The HTTP status code.
          format: int32
          example: 500
        title:
          type: string
          description: Short human-readable summary of the problem.
        type:
          type: string
          description: A URL to a page with more details regarding the problem.
      description: A "problem detail" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)
    ProductResource:
      title: ProductResource
      required:
        - contractTemplatePath
        - contractTemplateUpdatedAt
        - contractTemplateVersion
        - createdAt
        - id
        - title
      type: object
      properties:
        contractTemplatePath:
          type: string
          description: The path of contract
        contractTemplateUpdatedAt:
          type: string
          description: Date the contract was postponed
          format: date-time
        contractTemplateVersion:
          type: string
          description: Version of the contract
        createdAt:
          type: string
          description: Date the products was activated/created
          format: date-time
        depictImageUrl:
          type: string
          description: Product's depiction image url
        description:
          type: string
          description: Product's description
        id:
          type: string
          description: Product's unique identifier
        identityTokenAudience:
          type: string
          description: Product's identity token audience
        logo:
          type: string
          description: Product's logo url
        logoBgColor:
          pattern: ^#0-9A-F6$
          type: string
          description: Product logo's background color
        parentId:
          type: string
          description: Root parent of the sub product
        roleManagementURL:
          type: string
          description: Url of the utilities management
        roleMappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProductRoleInfoRes'
          description: Mappings between Party's and Product's role
        title:
          type: string
          description: Product's title
        urlBO:
          type: string
          description: URL that redirects to the back-office section where is possible to manage the product
        urlPublic:
          type: string
          description: URL that redirects to the public information webpage of the product
    ProductRoleInfoRes:
      title: ProductRoleInfoRes
      required:
        - multiroleAllowed
        - roles
      type: object
      properties:
        multiroleAllowed:
          type: boolean
          description: Flag indicating if a User can have more than one product role
          example: false
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ProductRole'
          description: Available product roles
    ProductRole:
      title: ProductRole
      required:
        - code
        - description
        - label
      type: object
      properties:
        code:
          type: string
          description: Product role internal code
        description:
          type: string
          description: Product role description
        label:
          type: string
          description: Product role label
    PageOfUserGroupResource:
      title: PageOfUserGroupResource
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupResource'
          description: The page content
        number:
          type: integer
          description: The number of the current page
          format: int32
        size:
          type: integer
          description: The size of the page
          format: int32
        totalElements:
          type: integer
          description: The total amount of elements
          format: int64
        totalPages:
          type: integer
          description: The number of total pages
          format: int32
    UserGroupResource:
      title: UserGroupResource
      required:
        - description
        - id
        - institutionId
        - name
        - productId
        - status
      type: object
      properties:
        description:
          type: string
          description: Users group's description
        id:
          type: string
          description: Users group's unique identifier
        institutionId:
          type: string
          description: Users group's institutionId
        name:
          type: string
          description: Users group's name
        productId:
          type: string
          description: Users group's productId
        status:
          enum:
            - ACTIVE
            - SUSPENDED
          type: string
          description: Users group's status
    UserResource:
      title: UserResource
      required:
        - email
        - id
        - name
        - roles
        - surname
      type: object
      properties:
        email:
          type: string
          description: User's institutional email
          format: email
          example: email@example.com
        id:
          type: string
          description: User's unique identifier
          format: uuid
        name:
          type: string
          description: User's name
        roles:
          type: array
          items:
            type: string
          description: User's roles in product
        surname:
          type: string
          description: User's surname
    Institution:
      required:
        - id
        - externalId
        - originId
        - description
        - digitalAddress
        - address
        - zipCode
        - taxCode
        - attributes
        - origin
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
        externalId:
          type: string
          description: external institution id
          example: c_f205
        originId:
          type: string
          description: origin institution id (e.g iPA code)
          example: c_f205
        description:
          type: string
          example: AGENCY X
        digitalAddress:
          type: string
          format: email
          example: email@pec.mail.org
        address:
          type: string
          example: via del campo
        zipCode:
          type: string
          example: '20100'
        taxCode:
          type: string
          description: institution tax code
        origin:
          type: string
          description: The origin form which the institution has been retrieved
          example: IPA
        institutionType:
          type: string
          description: institution type
          example: PA
        attributes:
          $ref: '#/components/schemas/Attributes'
        logo:
          type: string
          description: URL to institution logo
          format: url
      additionalProperties: false
    Attribute:
      required:
        - origin
        - code
        - description
      type: object
      properties:
        origin:
          type: string
        code:
          type: string
        description:
          type: string
    Attributes:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: institutions
    description: Institution Controller
  - name: product
    description: Product Controller